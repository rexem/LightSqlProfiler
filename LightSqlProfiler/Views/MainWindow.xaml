<cc:MetroWindow x:Class="LightSqlProfiler.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LightSqlProfiler"
        xmlns:vm="clr-namespace:LightSqlProfiler.ViewModels"
        xmlns:status="clr-namespace:LightSqlProfiler.Core.Enums"
        xmlns:conv="clr-namespace:LightSqlProfiler.Gui.Converters"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:cc="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=vm:MainVM}"
        Title="Light SQL Profiler" ResizeMode="CanResizeWithGrip"
        Width="{Binding Settings.App.WindowWidth, Mode=TwoWay, FallbackValue=1000}" Height="{Binding Settings.App.WindowHeight, Mode=TwoWay, FallbackValue=500}"
        Left="{Binding Settings.App.WindowLeft, Mode=TwoWay}" Top="{Binding Settings.App.WindowTop, Mode=TwoWay}" WindowState="{Binding Settings.App.WindowState, FallbackValue=Normal}"
        Icon="/LightSqlProfiler;component/logo.ico">
    <Window.Resources>
        <conv:ColumnTextConverter x:Key="TextConverter" />
    </Window.Resources>

    <cc:MetroWindow.RightWindowCommands>
        <cc:WindowCommands>
            <Button Content="settings" Command="{Binding UserSettingsCommand}" />
        </cc:WindowCommands>
    </cc:MetroWindow.RightWindowCommands>

    <DockPanel>
        <!-- status bar -->
        <StatusBar DockPanel.Dock="Bottom">
            <!-- loading spinner -->
            <StatusBarItem>
                <StatusBarItem.Style>
                    <Style TargetType="StatusBarItem">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status.Status}" Value="{x:Static status:AppStatusCodes.Connecting}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status.Status}" Value="{x:Static status:AppStatusCodes.Disconnecting}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>
                <cc:ProgressRing Foreground="{DynamicResource WhiteBrush}" Height="Auto" Width="Auto"/>
            </StatusBarItem>
            
            <!-- status textual display -->
            <StatusBarItem>
                <TextBlock Text="{Binding Status.Status}" />
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right" Margin="0,0,20,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Total Rows:"/>
                    <TextBlock Text="{Binding Events.Count}" Margin="10,0,0,0"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        
        <!-- main menu -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="Connect to Server..." Command="{Binding ServersCommand}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial Kind="DatabaseSearch" Margin="5"/>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="E_xit" Command="{Binding ExitCommand}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial Kind="ExitToApp" Margin="5"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="Clear Results" Command="{Binding ClearEventsCommand}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial Kind="Delete" Margin="5"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Word Wrap" IsCheckable="True" IsChecked="{Binding Settings.Editor.IsWrap}"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="Auto Scroll" IsChecked="{Binding Settings.App.AutoScroll}" IsCheckable="True"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_Check for Updates..." Command="{Binding CheckUpdatesCommand}"/>
                
                <MenuItem Header="_About..." Command="{Binding AboutCommand}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial Kind="InformationOutline" Margin="5" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!-- main tool bar -->
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <!-- server list -->
                <Button Command="{Binding ServersCommand}" ToolTip="Manage servers">
                    <iconPacks:PackIconMaterial Kind="DatabaseSearch" />
                </Button>
                <Label Content="Server:" />
                <ComboBox Width="150" ItemsSource="{Binding Settings.Connections.Servers}" SelectedItem="{Binding Settings.Connections.CurrentConnection}" DisplayMemberPath="Name" />

                <!-- start/stop -->
                <Button Command="{Binding StartCommand}" ToolTip="Connect to server" Style="{StaticResource GreenButton}">
                    <iconPacks:PackIconMaterial Kind="PlayCircleOutline"/>
                </Button>
                <Button Command="{Binding StopCommand}" ToolTip="Disconnect from server" Style="{StaticResource RedButton}">
                    <iconPacks:PackIconMaterial Kind="StopCircleOutline" />
                </Button>

                <Separator />

                <Button Command="{Binding ClearEventsCommand}" ToolTip="Clear results list">
                    <iconPacks:PackIconMaterial Kind="Delete" />
                </Button>
                <ToggleButton ToolTip="Toggle result auto scrolling" IsChecked="{Binding Settings.App.AutoScroll}">
                    <iconPacks:PackIconMaterial Kind="ArrowExpandVertical" />
                </ToggleButton>

                <Separator />

                <Button Command="{Binding SelectColumnsCommand}" ToolTip="Select columns">
                    <iconPacks:PackIconMaterial Kind="FormatColumns" />
                </Button>

                <Separator />
                
                <Button Command="{Binding AboutCommand}" ToolTip="About Light SQL Profiler">
                    <iconPacks:PackIconMaterial Kind="InformationOutline" />
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <!-- Results grid -->
            <ListView x:Name="ResultsContainer" Margin="10" ItemsSource="{Binding Events}" SelectedItem="{Binding SelectedEvent}" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <ListView.Resources>
                    <Style BasedOn="{StaticResource MetroGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Border Padding="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccentColorBrush}">
                                        <DockPanel>
                                            <TextBlock DockPanel.Dock="Top" Text="{Binding DisplayName, FallbackValue='Debug'}"/>
                                            <TextBox HorizontalAlignment="Stretch" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged, Delay=350}"/>
                                        </DockPanel>
                                    </Border>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style BasedOn="{StaticResource MetroListViewItem}" TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding EventClass}" Value="Custom">
                                <Setter Property="Foreground" Value="Blue"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>

                <ListView.View>
                    <GridView x:Name="ResultGridBox">
                        <!-- note: this is just a demo, real columns are dynamically built -->
                        <GridViewColumn Header="EventClass" DisplayMemberBinding="{Binding EvenClass}" Width="100"/>
                        <GridViewColumn Header="TextData" DisplayMemberBinding="{Binding TextData, Converter={StaticResource TextConverter}}" Width="600"/>
                        <GridViewColumn Header="ApplicationName" DisplayMemberBinding="{Binding ApplicationName}" Width="100"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <GridSplitter VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Width="Auto" Height="5" ResizeDirection="Rows" />

            <!-- Bottom panel -->
            <cc:MetroAnimatedSingleRowTabControl Grid.Row="1" TabStripPlacement="top">
                <TabItem Header="SQL" Style="{DynamicResource TabSized}">
                    <DockPanel VerticalAlignment="Stretch">
                        <ToolBarTray DockPanel.Dock="Top">
                            <ToolBar>
                                <ToggleButton ToolTip="Wrap text" IsChecked="{Binding Settings.Editor.IsWrap, Mode=TwoWay}">
                                    <iconPacks:PackIconMaterial Kind="Wrap" />
                                </ToggleButton>
                                <Button ToolTip="Copy all text" Command="{Binding CopySqlCommand}">
                                    <iconPacks:PackIconMaterial Kind="ContentCopy" />
                                </Button>
                                <Separator />
                                <Button ToolTip="Show query window" Command="{Binding RunCommand}">
                                    <iconPacks:PackIconMaterial Kind="PlaylistEdit" />
                                </Button>
                                <Button ToolTip="Execute query in the background" Command="{Binding RunBackgroundSqlCommand}">
                                    <iconPacks:PackIconMaterial Kind="PlaylistPlay" />
                                </Button>
                                <Separator />
                                <Label Content="Database:" />
                                <Label Content="{Binding CurrentDatabaseName, TargetNullValue='(default)'}" FontStyle="Italic" />
                            </ToolBar>
                        </ToolBarTray>

                        <avalonEdit:TextEditor x:Name="SqlPreviewBox" Margin="10,5,10,10" FontFamily="Consolas" WordWrap="{Binding Settings.Editor.IsWrap}"
                            ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" IsReadOnly="True" ShowLineNumbers="True"
                            BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1"/>
                    </DockPanel>
                </TabItem>
            </cc:MetroAnimatedSingleRowTabControl>
        </Grid>
    </DockPanel>
</cc:MetroWindow>
